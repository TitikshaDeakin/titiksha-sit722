name: CD to Staging (Docker)

on:
  workflow_run:
    workflows: ["CI test and build (testing branch)"]
    types: [completed]

permissions:
  contents: read
  id-token: write   # needed for azure/login OIDC

env:
  ACR_LOGIN_SERVER: sit722acr.azurecr.io
  IMAGE_TAG: testing

jobs:
  staging_deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login --name sit722acr

      - name: Start staging environment
        run: docker compose -f docker-compose.staging.yml up -d

      - name: Wait for services
        run: |
          for i in {1..30}; do
            curl -fsS http://localhost:8080/ && break || true
            echo "Waiting for frontend... ($i/30)"
            sleep 2
          done

      - name: Smoke test frontend
        run: curl -sS http://localhost:8080/ | head -n 20

      - name: Show running containers
        run: docker ps

  cleanup_staging:
    needs: staging_deploy
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Stop staging environment
        run: docker compose -f docker-compose.staging.yml down -v
