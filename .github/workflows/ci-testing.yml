name: CI â€“ test, then build & push to ACR (branch:testing)

on:
  push:
    branches: [ testing ]

permissions:
  contents: read
  id-token: write    # required for Azure OIDC

env:
  PYTHON_VERSION: "3.11"
  ACR_NAME: ${{ secrets.ACR_NAME }}              # e.g. sit722acr123
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g. sit722acr123.azurecr.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test_backends:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        svc: [customer_service, order_service, product_service]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install deps (prod for build & dev for tests)
        working-directory: backend/${{ matrix.svc }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run unit tests
        working-directory: backend/${{ matrix.svc }}
        run: |
          pytest -q

  build_and_push_images:
    needs: test_backends
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---- Azure OIDC login (no passwords/secrets) ----
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:     ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:     ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login --name "${{ env.ACR_NAME }}"

      # ---- Build & push backend images ----
      - name: Build & push customer_service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/customer_service
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/customer_service:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/customer_service:testing

      - name: Build & push order_service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/order_service
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/order_service:testing

      - name: Build & push product_service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/product_service
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/product_service:testing

      # (Optional) Frontend image too, if needed for staging later
      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/frontend:testing
